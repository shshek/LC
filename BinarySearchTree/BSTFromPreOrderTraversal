/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public TreeNode BstFromPreorder(int[] preorder) {
        int i = 0;
        //Important to pass it by ref
        //Only one max will do instead of range
        return BstFromPreorderHelper(preorder, int.MaxValue, ref i);
    }
    
    public TreeNode BstFromPreorderHelper(int[] preorder, int max, ref int i)
    {
        if(i >= preorder.Length || preorder[i] > max) 
            return null;
        
        TreeNode root = new TreeNode(preorder[i++]);
        root.left = BstFromPreorderHelper(preorder, root.val, ref i);
        root.right = BstFromPreorderHelper(preorder, max, ref i);
        
        return root;
    }
}
