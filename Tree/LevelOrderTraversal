/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<IList<int>> LevelOrder(TreeNode root) {
        IList<IList<int>> llist = new List<IList<int>>();
        if(root == null) return llist;
        
        Queue<TreeNode> q = new Queue<TreeNode>();
        q.Enqueue(root);
        
        while(q.Count != 0)
        {
            //Track counter for each level
            int counter = q.Count;
            IList<int> list = new List<int>();
            for(int i = 0; i < counter; i++)
            {
                root = q.Dequeue();
                list.Add(root.val);
                
                if(root.left != null)
                    q.Enqueue(root.left);
            
                if(root.right != null)
                    q.Enqueue(root.right);
            }
            llist.Add(new List<int>(list));
        }
        
        return llist;
    }
}
