/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsBalanced(TreeNode root) {
        if(GetHeight(root) == -1) 
            return false;
        return true;
    }
    
    public int GetHeight(TreeNode node)
    {
        if(node == null) return 0;
        
        int lh = GetHeight(node.left);
        int rh = GetHeight(node.right);
        
        if(lh == -1 || rh == -1) return -1;
        if(Math.Abs(lh-rh) > 1) return -1;
        
        return 1 + Math.Max(lh,rh);
    }
}
