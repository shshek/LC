/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public IList<int> RightSideView(TreeNode root) {
        IList<int> list = new List<int>();
        if(root == null) return list;
        
        RightSideViewHelper(root, 0, list);
        return list;
    }
    
    public void RightSideViewHelper(TreeNode node, int level, IList<int> list)
    {
        //We will do a reverse preOrder traversal so NRL
        if(node == null)
            return;
        //Check if list already has that level's first -> GENIUS WAY
        if(list.Count == level)
            list.Add(node.val);
        RightSideViewHelper(node.right, level+1, list);
        RightSideViewHelper(node.left, level+1, list);
    }
}
